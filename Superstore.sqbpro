<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="superstore.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure pragmas browser query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="3871"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><table title="product" custom_title="0" dock_id="1" table="4,7:mainproduct"/><dock_state state="000000ff00000000fd00000001000000020000033b00000226fc0100000001fb000000160064006f0063006b00420072006f007700730065003101000000000000033b0000011800ffffff0000033b0000000000000004000000040000000800000008fc00000000"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="calendar" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="156"/><column index="2" value="83"/><column index="3" value="44"/><column index="4" value="39"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="customer_address" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="300"/><column index="2" value="132"/><column index="3" value="75"/><column index="4" value="163"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="orders" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="47"/><column index="2" value="117"/><column index="3" value="156"/><column index="4" value="156"/><column index="5" value="117"/><column index="6" value="79"/><column index="7" value="300"/><column index="8" value="124"/><column index="9" value="55"/><column index="10" value="78"/><column index="11" value="56"/><column index="12" value="85"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="product" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="124"/><column index="2" value="300"/><column index="3" value="93"/><column index="4" value="62"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="product_categories" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="93"/><column index="2" value="124"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">-- What is the category generating the maximum sales revenue?
SELECT DISTINCT category, SUM(orders.sales) AS Total_revenue
FROM product_categories
LEFT JOIN product ON product.subcategory = product_categories.subcategory
LEFT JOIN orders ON orders.product_id = product.product_id
GROUP BY category
ORDER BY Total_revenue DESC
LIMIT 1



-- What about the profit in this category?
-- Are they making a loss in any categories?
SELECT DISTINCT category, SUM(orders.profit) AS Total_profit
FROM product_categories
LEFT JOIN product ON product.subcategory = product_categories.subcategory
LEFT JOIN orders ON orders.product_id = product.product_id
GROUP BY category
ORDER BY Total_profit DESC

-- Do it by subcategory instead!
SELECT *
FROM (
SELECT DISTINCT product.subcategory, SUM(orders.profit) AS Total_profit
FROM product
LEFT JOIN orders ON orders.product_id = product.product_id
GROUP BY product.subcategory
ORDER BY Total_profit DESC
)
WHERE Total_profit &lt; 0</sql><sql name="SQL 2">-- What are 5 states generating the maximum and minimum sales revenue?
SELECT DISTINCT state, SUM(orders.sales) AS Total_revenue
FROM customer_address 
LEFT JOIN orders ON orders.customer_address_key = customer_address.customer_address_key
GROUP BY state
ORDER BY Total_revenue DESC
LIMIT 5

SELECT DISTINCT state, SUM(orders.sales) AS Total_revenue
FROM customer_address 
LEFT JOIN orders ON orders.customer_address_key = customer_address.customer_address_key
GROUP BY state
ORDER BY Total_revenue ASC
LIMIT 5</sql><sql name="SQL 3">-- What are the 3 products in each product segment with the highest sales?
SELECT *
FROM
(
SELECT DISTINCT product_categories.category, product.product_id, 
	RANK() OVER (PARTITION BY product_categories.category 
	ORDER BY SUM(orders.sales) DESC) Revenue_Rank,
	RANK() OVER (PARTITION BY product_categories.category 
	ORDER BY SUM(orders.profit) DESC) Profit_Rank
FROM product
LEFT JOIN orders ON orders.product_id = product.product_id
LEFT JOIN product_categories ON product_categories.subcategory = product.subcategory
GROUP BY product_categories.category, product.product_id
)
WHERE Revenue_Rank BETWEEN 1 AND 3

-- Are they the 3 most profitable products as well?
SELECT *
FROM
(
SELECT DISTINCT product_categories.category, product.product_id, 
	RANK() OVER (PARTITION BY product_categories.category 
	ORDER BY SUM(orders.profit) DESC) Profit_Rank
FROM product
LEFT JOIN orders ON orders.product_id = product.product_id
LEFT JOIN product_categories ON product_categories.subcategory = product.subcategory
GROUP BY product_categories.category, product.product_id
)
WHERE Profit_Rank BETWEEN 1 AND 3</sql><sql name="SQL 4">-- What are the 3 best-seller products in each product segment? (Quantity-wise)
SELECT *
FROM
(
SELECT DISTINCT product_categories.category, product.product_id, 
	RANK() OVER (PARTITION BY product_categories.category 
	ORDER BY SUM(orders.quantity) ASC) Volume_Rank
FROM product
LEFT JOIN orders ON orders.product_id = product.product_id
LEFT JOIN product_categories ON product_categories.subcategory = product.subcategory
GROUP BY product_categories.category, product.product_id
)
WHERE Volume_Rank BETWEEN 1 AND 3</sql><sql name="SQL 5_?">-- What are the top 3 worst-selling products in every category? (Quantity-wise)
-- Result different from Python
SELECT *
FROM
(
SELECT DISTINCT product_categories.category, product.product_id, 
	RANK() OVER (PARTITION BY product_categories.category 
	ORDER BY SUM(orders.quantity) DESC) Low_Volume_Rank
FROM product
LEFT JOIN orders ON orders.product_id = product.product_id
LEFT JOIN product_categories ON product_categories.subcategory = product.subcategory
GROUP BY product_categories.category, product.product_id
)
WHERE Low_Volume_Rank BETWEEN 1 AND 3</sql><sql name="SQL 6*">-- How many unique customers per month are there for the year 2016.

SELECT calendar.month, COUNT(DISTINCT orders.customer_id) AS Customer_count
FROM orders
LEFT JOIN calendar ON calendar.order_date = orders.order_date
WHERE calendar.year = 2016
GROUP BY calendar.month

 </sql><current_tab id="5"/></tab_sql></sqlb_project>
